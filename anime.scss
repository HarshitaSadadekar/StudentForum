@function pow($number, $exp) {
    $value: 1;
    @if $exp > 0 {
      @for $i from 1 through $exp {
        $value: $value * $number;
      }
    }
    @else if $exp < 0 {
      @for $i from 1 through -$exp {
        $value: $value / $number;
      }
    }
    @return $value;
  }
  
  @function fact($number) {
    $value: 1;
    @if $number > 0 {
      @for $i from 1 through $number {
        $value: $value * $i;
      }
    }
    @return $value;
  }
  
  @function pi() {
    @return 3.14159265359;
  }
  
  @function rad($angle) {
    $unit: unit($angle);
    $unitless: $angle / ($angle * 0 + 1);
    // If the angle has 'deg' as unit, convert to radians.
    @if $unit == deg {
      $unitless: $unitless / 180 * pi();
    }
    @return $unitless;
  }
  
  
  @function sin($angle) {
    $sin: 0;
    $angle: rad($angle);
    // Iterate a bunch of times.
    @for $i from 0 through 10 {
      $sin: $sin + pow(-1, $i) * pow($angle, (2 * $i + 1)) / fact(2 * $i + 1);
    }
    @return $sin;
  }
  
  @function cos($angle) {
    $cos: 0;
    $angle: rad($angle);
    // Iterate a bunch of times.
    @for $i from 0 through 10 {
      $cos: $cos + pow(-1, $i) * pow($angle, 2 * $i) / fact(2 * $i);
    }
    @return $cos;
  }
  
  @mixin shade($type, $color: #3498db, $borderColor: #fff, $depth: 20, $angle: 135deg, $long: false, $fade: false) {
      $angle: ($angle - 90);
      $x: 1.1 * cos($angle) + 0px;
      $y: 1.1 * sin($angle) + 0px;
      $darken: (lightness($color)/$depth)/2;
      $opacify: 0;
      $shadow: ();
  
      @if $long == true{
        $darken:0;
      }
  
      @if $fade == true {
        $opacify: (opacity($color)/$depth) ;
          // added this for rendering in some browsers, remove if you like.
        @include translateZ(0);
      }
  
      @for $i from 1 through $depth {
        $shadow: $shadow, $i*$x $i*$y 0 hsla(hue($color) , saturation($color), (lightness($color) - ($i * $darken)), 1 - ($i * $opacify));
      }
      #{$type}-shadow:  1.5px 1.5px 0 $borderColor,
                        0px 1.5px 0 $borderColor,
                        -1.5px -1.5px 0 $borderColor,
                        -1.5px -1.5px 0 $borderColor,
                        -1.5px 1.5px 0 $borderColor,
                         1.5px -1.5px 0 $borderColor,
                         $shadow;
  }
  
  //mixin to provide just a basic outline for the text
  @mixin outline($color: #fff) {
      text-shadow: 1.5px 1.5px 0 $color,
                   -1.5px -1.5px 0 $color,
                   -1.5px -1.5px 0 $color,
                   -1.5px 1.5px 0 $color,
                   1.5px -1.5px 0 $color;
  }
  
  
  // Define the fonts used in the Pen
  // @import url(https://fonts.googleapis.com/css?family=Francois+One);
  // @import url(https://fonts.googleapis.com/css?family=PT+Sans);
  @import url('https://fonts.googleapis.com/css2?family=Permanent+Marker&family=Righteous&family=Skranji&display=swap');
  
  // Define the colors
  // $pink		: #f89bb4;
  $pink		: #1c264a;
  // $pinkPastel	: #ebaca5;
  $pinkPastel	: #71a2c1;
  // $pinkDark	: #e62915;
  $pinkDark	: #ffcd75;
  // $pinkGrayed	: #d38076;
  $pinkGrayed:#71a2c1;
  $grayLight	: #cac6c5;
$offWhite	: #e7e7e7;
  
//   default header class â€“ used on all examples
  .deco {
      display: inline-block;
      text-align: center;
      font-family: 'Skranji', cursive;
      font-size: 70px;
      color: $offWhite;
      text-decoration: none;
  
      @include outline($grayLight);
  
      transition: all 400ms ease-in-out;
  }
  // raising text from page when hovered, so flipped state to header--pushDown class
  .deco--raiseUp {
      &:hover {
          transform: translate(-9px, -9px);
          @include shade(text, #aaa, #333, 10, 135deg, true);
      }
  }
  
  // creates a shadow effect, rather than a raised lettering effect
  // simply by adjusting the translate position a little
  .deco--shadow {
      &:hover {
          transform: translate(5px, 0);
      }
  
      &.deco--raiseUp {
          &:hover {
              transform: translate(-5px, 0);
          }
      }
  }
  
  
  //Brighter colored text
  .color-bright {
  
      & .deco {
          color: $pink;
          @include outline($pinkGrayed);
      }
    
    & .deco--raiseUp:hover {
		@include shade(text, $pinkDark, #fff, 10, 135deg, true);
	}
}